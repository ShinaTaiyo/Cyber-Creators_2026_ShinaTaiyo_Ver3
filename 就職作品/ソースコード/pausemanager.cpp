//=============================================================================================================================
//
//２０２５年３月３１日：ポーズマネージャーを作る[pausemanager.cpp]
//Author:ShinaTaiyo
//
//=============================================================================================================================

//================================================================
//インクルード
//================================================================
#include "pausemanager.h"
#include "pausemanager_state.h"
#include "input.h"
#include "manager.h"
#include "debugtext.h"
#include "fade.h"
#include "game.h"
//=============================================================================================================================

//================================================================
//静的メンバ宣言
//================================================================

//=============================================================================================================================

//================================================================
//コンストラクタ
//================================================================
CPauseManager::CPauseManager(int nPriority, bool bUseintPriority, TYPE Type, OBJECTTYPE ObjType)
{

}
//=============================================================================================================================

//================================================================
//デストラクタ
//================================================================
CPauseManager::~CPauseManager()
{

}
//=============================================================================================================================

//================================================================
//初期化処理
//================================================================
HRESULT CPauseManager::Init()
{
	CObject::Init();//初期化処理

	m_pPauseState = DBG_NEW CPauseState_Normal(this);//通常状態にする
	return S_OK;
}
//=============================================================================================================================

//================================================================
//終了処理
//================================================================
void CPauseManager::Uninit()
{
	CObject::Uninit();//終了処理
}
//=============================================================================================================================

//================================================================
//更新処理
//================================================================
void CPauseManager::Update()
{
	if (m_pPauseState != nullptr)
	{
		m_pPauseState->Update(this);//ステートの更新処理
	}

	CObject::Update();//更新処理
}
//=============================================================================================================================

//================================================================
//描画処理
//================================================================
void CPauseManager::Draw()
{
	CObject::Draw();//描画処理
}
//=============================================================================================================================

//================================================================
//死亡フラグ設定処理
//================================================================
void CPauseManager::SetDeath()
{
	if (GetUseDeath())
	{//死亡フラグを使用するなら
		if (m_pPauseState != nullptr)
		{
			//現在のステート破棄
			delete m_pPauseState;
			m_pPauseState = nullptr;
		}
	}
	CObject::SetDeath();//死亡フラグ設定処理
}
//=============================================================================================================================

//================================================================
//生成処理
//================================================================
CPauseManager* CPauseManager::Create()
{
	CDebugText* pDebugText = CManager::GetDebugText();     //デバッグ表示情報を取得
	CPauseManager* pPauseManager = DBG_NEW CPauseManager();//生成
	pPauseManager->Init();                                 //初期化処理
	pDebugText->PrintDebugText("ポーズマネージャーを生成！\n");
	return pPauseManager;
}
//=============================================================================================================================

//================================================================
//ステート変更処理
//================================================================
void CPauseManager::ChengeState(CPauseState_Component* pState)
{
	if (m_pPauseState != nullptr)
	{
		//現在のステート破棄
		delete m_pPauseState;
		m_pPauseState = nullptr;

		//新しいステートを設定
		m_pPauseState = pState;;
	}
}
//=============================================================================================================================