//===================================================================================================================
//
// ２０２５年５月２５日：コードを綺麗にする[bg3d.h]
// Author:ShinaTaiyo
//
//===================================================================================================================

//*******************************************************************************************************************
// ２重インクルード防止
//*******************************************************************************************************************
#ifndef _BG3D_H_
#define _BG3D_H_

//*******************************************************************************************************************
// インクルード
//*******************************************************************************************************************
#include "main.h"    // メイン 
#include "objectX.h" // オブジェクトX

//*******************************************************************************************************************
// 3D背景クラス
//*******************************************************************************************************************
class CBg3D : public CObjectX
{
public:
	// === 列挙型 ===

	// 3D背景種類列挙型
	enum class TYPE
	{
	    SKY = 0, // 空
		MAX // 最大
	};

	// === 特殊関数 ===

	// コンストラクタ
	CBg3D(
		int nPri = 0, // 自分で決めるint型プライオリティ
		bool bUseintPri = false, // 自分でプライオリティを決めるかどうか
		CObject::TYPE type = CObject::TYPE::BG3D, // タイプ
		CObject::OBJECTTYPE ObjType = CObject::OBJECTTYPE::OBJECTTYPE_X // オブジェクトタイプ
	);
	~CBg3D(); // デストラクタ

	// === ライフサイクルメンバ関数 ===

	HRESULT Init() override;  // 初期化処理
	void Uninit() override;   // 終了処理
	void Update() override;   // 更新処理
	void Draw() override;     // 描画処理
	void SetDeath() override; // 死亡フラグ設定処理

	// === メンバ関数 ===

	// 3D背景の種類
	void SetType(TYPE type);       // 設定
	const TYPE& GetType() const;   // 取得

	// === 静的メンバ関数 ===

	static CBg3D* Create(TYPE type,D3DXVECTOR3 Pos, D3DXVECTOR3 Rot,D3DXVECTOR3 Scale); // 生成処理
private:
	// === 静的メンバ変数 ===

	static const string s_BG3D_FILENAME[static_cast<int>(TYPE::MAX)]; // モデルパス

	// === メンバ変数 ===

	TYPE m_Type; // 3D背景の種類
};


#endif // !