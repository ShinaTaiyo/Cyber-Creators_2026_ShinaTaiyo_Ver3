//==================================================================================
//
//６月４日：床クラス実装[field.cpp]
//Author:ShinaTaiyo
//
//==================================================================================

//==========================================
//インクルード
//==========================================
#include "field.h"
#include "renderer.h"
#include "manager.h"
#include "texture.h"
//===================================================================================

//==========================================
//静的メンバ宣言
//==========================================
const char* CField::m_apFIELD_FILENAME[static_cast<int>(CField::FIELDTYPE::MAX)] =
{
	"data\\TEXTURE\\Field\\Field_000.jpg",
	"data\\TEXTURE\\Field\\Field_001.png",
	"data\\TEXTURE\\Field\\Tile_000.png"
};

//==========================================
//コンストラクタ
//==========================================
CField::CField(int nPri, bool bUseintPri, CObject::TYPE type, CObject::OBJECTTYPE ObjType) : m_FieldType(FIELDTYPE::NORMAL),CObject3D(nPri,bUseintPri,type,ObjType)
{

}
//===================================================================================

//==========================================
//デストラクタ
//==========================================
CField::~CField()
{

}
//===================================================================================

//==========================================
//初期化処理
//==========================================
HRESULT CField::Init()
{
	CObject3D::Init();//3Dオブジェクト初期化
	return S_OK;
}
//===================================================================================

//===========================================
//終了処理
//===========================================
void CField::Uninit()
{
	CObject3D::Uninit();//3Dオブジェクト終了処理
}
//===================================================================================

//===========================================
//更新処理
//===========================================
void CField::Update()
{
	CObject3D::Update();//3Dオブジェクト更新処理
}
//===================================================================================

//===========================================
//描画処理
//===========================================
void CField::Draw()
{
	CObject3D::Draw();//3Dオブジェクト描画処理
}
//===================================================================================

//===========================================
//死亡フラグを設定
//===========================================
void CField::SetDeath()
{
	CObject3D::SetDeath();//3Dオブジェクト死亡フラグ設定処理
}
//===================================================================================


//===========================================
//生成処理
//===========================================
CField* CField::Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot, float fWidth, float fHeight, FIELDTYPE FieldType)
{
	CField* pField = DBG_NEW CField();                                                                         //床を生成
	pField->Init();                                                                                            //初期化処理
	pField->SetRot(rot);                                                                                       //向きの設定
	pField->SetPos(pos);                                                                                       //位置の設定
	pField->SetUseDeath(true);                                                                                 //死亡フラグを発動するかどうかを設定する
	pField->SetTextureIndex(CManager::GetTexture()->Regist(m_apFIELD_FILENAME[static_cast<int>(FieldType)]));  //テクスチャインデックスを設定
	pField->bindTexture(CManager::GetTexture()->GetAddress(pField->GetTextureIndex()));                        //テクスチャをセットする　
	pField->CObject::SetType(CObject::TYPE::FIELD);                                                            //オブジェクトの種類を決める
	pField->CObject3D::SetWidth(fWidth);                                                                       //横幅
	pField->CObject3D::SetHeight(fHeight);                                                                     //高さ
	return pField;
}
//===================================================================================