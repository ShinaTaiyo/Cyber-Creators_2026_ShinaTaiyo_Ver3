//==========================================================================================
//
//８月１８日：ロックオンを作る[Ui3D.cpp]
//Author:ShinaTaiyo
//
//==========================================================================================

//==================================================
//インクルード
//==================================================
#include "Ui3D.h"
#include "manager.h"
#include "renderer.h"
#include "texture.h"
//==========================================================================================

//==================================================
//静的メンバ宣言
//==================================================
const char* CUi3D::m_apUI3D_FILENAME[CUi3D::UI3DTYPE_MAX] =
{
	"data\\TEXTURE\\UI3D\\Target_000.png",
	"data\\TEXTURE\\UI3D\\WarningMark_000.png"
};
//==========================================================================================

//==================================================
//コンストラクタ
//==================================================
CUi3D::CUi3D() : m_type(UI3DTYPE00_LOCKON)
{

}
//==========================================================================================

//=========================
//===============================================
//デストラクタ============================
CUi3D::~CUi3D()
{

}
//==========================================================================================

//==================================================
//初期化処理
//==================================================
HRESULT CUi3D::Init()
{
	//===========================
	//ビルボード初期化
	//===========================
	CBillboard::Init();

	//=========================================

	m_type = UI3DTYPE00_LOCKON;//種類
	m_bDrawSwitch = true;

	return S_OK;
}
//==========================================================================================

//==================================================
//終了処理
//==================================================
void CUi3D::Uninit()
{
	CBillboard::Uninit();
}
//==========================================================================================

//==================================================
//更新処理
//==================================================
void CUi3D::Update()
{
	int& nLife = GetLife();
	//========================================
	//ビルボードの更新処理
	//========================================
	CBillboard::Update();
	//===========================================================================================
	switch (m_type)
	{
	case UI3DTYPE00_LOCKON:
		break;
	case UI3DTYPE01_WARNING:
		if (nLife % 5 == 0)
		{
			m_bDrawSwitch = m_bDrawSwitch ? false : true;
		}
		break;
	default:
		break;
	}
}
//==========================================================================================

//==================================================
//描画処理
//==================================================
void CUi3D::Draw()
{
	if (m_bDrawSwitch == true)
	{
		CBillboard::Draw();
	}
}
//==========================================================================================

//==================================================
//死亡フラグ設定処理
//==================================================
void CUi3D::SetDeath()
{
	CObject::SetDeath();
}
//==========================================================================================

//==================================================
//生成処理
//==================================================
CUi3D* CUi3D::Create(UI3DTYPE type, int nLife, float fWidth, float fHeight, D3DXVECTOR3 pos, D3DXVECTOR3 move)
{
	CUi3D* pUi3D = DBG_NEW CUi3D;                               //Ui3Dを生成
	CTexture* pTextureClass = CManager::GetTexture();           //テクスチャクラスを取得
	bool bSuccess = pUi3D->CObject::GetCreateSuccess();       //生成が成功したかどうかを取得する
	if (bSuccess == true)
	{//生成が成功したら
		if (pUi3D != nullptr)
		{
			pUi3D->Init();                                                                             //初期化処理
			pUi3D->SetUseDeath(true);                                                                 //死亡フラグを発動するかどうかを設定する
			pUi3D->m_type = type;                                                                      //弾の種類
			pUi3D->SetMove(move);                                                                      //移動量の設定
			pUi3D->SetTextureIndex(pTextureClass->Regist(m_apUI3D_FILENAME[type]));                    //テクスチャ番号設定
			pUi3D->SetLife(nLife);                                                                     //体力を設定
			pUi3D->SetMaxLife(nLife);                                                                  //最大体力を設定
			pUi3D->CBillboard::bindTexture(pTextureClass->GetAddress(pUi3D->GetTextureIndex()));       //テクスチャをセットする　
			pUi3D->CBillboard::SetPos(pos);                                                            //オブジェクト２Ｄの位置を設定
			pUi3D->SetSupportPos(pos);                                                                 //召喚位置を設定
			pUi3D->CBillboard::SetSize(fWidth, fHeight);                                               //ポリゴンのサイズを設定
			pUi3D->CBillboard::SetFormarSize(fWidth, fHeight);                                         //ポリゴンのサイズを設定
			pUi3D->CObject::SetType(CObject::TYPE_UI3D);                                             //オブジェクトの種類を決める
			pUi3D->SetAnimInfo(1, 1, NORMAL_COL, false);                                               //アニメーション情報を設定

		}
	}
	else
	{//オブジェクトに空きがなかったので破棄する
		delete pUi3D;
		pUi3D = nullptr;
		return nullptr;
	}
	return pUi3D;
}
//==========================================================================================