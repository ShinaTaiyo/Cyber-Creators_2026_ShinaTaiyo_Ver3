//===============================================
//
//５月２４日：爆発をクラス化[explosion.cpp]
//Author:ShinaTaiyo
//
//===============================================

//============================
//インクルード
//============================
#include "explosion.h"
#include "renderer.h"
#include "manager.h"
#include "texture.h"
//===============================================

//============================
//静的メンバ初期化
//============================

//============================
//コンストラクタ
//============================
CExplosion::CExplosion()
{

}
//==========================================================================================

//============================
//デストラクタ
//============================
CExplosion::~CExplosion()
{

}
//==========================================================================================

//============================
//初期化処理
//============================
HRESULT CExplosion::Init()
{
	CObject2D::Init();                     //２Dオブジェクトの初期化
	m_nLife = 0;                           //体力
	m_bUse = false;                        //使用状態

	//====================================================================================================

	return S_OK;
}
//==========================================================================================

//============================
//終了処理
//============================
void CExplosion::Uninit()
{
	CObject2D::Uninit();
	//SetDeath();
}
//==========================================================================================

//============================
//更新処理
//============================
void CExplosion::Update()
{
	m_nLife--;//体力を減らす

	//=================================
	//オブジェクト２D更新処理
	//=================================
	CObject2D::Update();
	//==========================================================

	//=================================
	//使用状態管理
	//=================================
	if (m_nLife <= 0)
	{
		m_bUse = false;
	}

	if (m_bUse == false)
	{
		//Uninit();
		SetDeath();
	}
	//=========================================================



}
//==========================================================================================


//============================
//描画処理
//============================
void CExplosion::Draw()
{
	CObject2D::Draw();//２Dオブジェクトの描画を行う
}
//==========================================================================================

//======================================================
//死亡フラグを設定
//======================================================
void CExplosion::SetDeath()
{
	CObject::SetDeath();
}
//==========================================================================================

//============================
//生成処理
//============================
void CExplosion::Create(int nLife, float fWidth, float fHeight, D3DXVECTOR3 pos)
{
	CExplosion* pExplosion = DBG_NEW CExplosion;
	bool bSuccess = pExplosion->CObject::GetCreateSuccess();

	if (bSuccess == true)
	{//オブジェクトに空きがあったら
		if (pExplosion != nullptr)
		{
			pExplosion->Init();                                                     //初期化処理
			pExplosion->SetUseDeath(true);                                                   //死亡フラグを発動するかどうかを設定する
			pExplosion->SetTextureIndex(CManager::GetTexture()->Regist("data\\TEXTURE\\explosion000.png"));
			pExplosion->BindTexture(CManager::GetTexture()->GetAddress(pExplosion->GetTextureIndex()));                     //テクスチャをセットする　
			pExplosion->CObject2D::SetInfo(8, 5, 20.0f, 20.0f,NORMAL_COL,POLYGONTYPE00_NORMAL,true);//ポリゴンとテクスチャ情報を設定
			pExplosion->m_nLife = nLife;                                            //弾の体力
			pExplosion->m_bUse = true;                                              //使用状態
			pExplosion->CObject2D::SetPos(pos);                                     //オブジェクト２Ｄの位置を設定
			pExplosion->CObject::SetType(CObject::TYPE_EXPLOSION);                  //オブジェクトの種類を決める
		}
	}
	else
	{//オブジェクトに空きがなかったら・・・
		delete pExplosion;
		pExplosion = nullptr;
	}
}
//==========================================================================================
