//========================================================================================================
//
//６月１７日：フェード処理実装
//Author:ShinaTaiyo
//
//========================================================================================================

//======================================================
//インクルード
//======================================================
#include "fade.h"
#include "scene.h"
//========================================================================================================

//======================================================
//コンストラクタ
//======================================================
CFade::CFade(int nPriority) : CObject2D(nPriority)
{

}
//========================================================================================================

//======================================================
//デストラクタ
//======================================================
CFade::~CFade()
{

}
//========================================================================================================

//======================================================
//初期化処理
//======================================================
HRESULT CFade::Init()
{
	CObject2D::Init();         //オブジェクト2D初期化処理
	m_FadeMode = FADEMODE_NONE;//フェードの種類
	m_nFadeCnt = 0;            //フェードのカウント
	m_nMaxFadeCnt = 0;         //フェードカウントの最大値
	m_fAlpha = 0.0f;           //フェードのアルファ値
	//m_NextMode = CScene::MODE_TITLE;//次のモード
	return S_OK;
}
//========================================================================================================

//======================================================
//終了処理
//======================================================
void CFade::Uninit()
{
	CObject2D::Uninit();
}
//========================================================================================================

//======================================================
//別枠の終了処理
//======================================================
void CFade::ExtraUninit()
{
	//Release();
}
//========================================================================================================

//======================================================
//更新処理
//======================================================
void CFade::Update()
{
	float fRatio = 0.0f;//フェードの進行度の割合
	bool bModeChenge = false;//モードが変わったかどうかのフラグ
	switch (m_FadeMode)
	{
	case FADEMODE_IN:
		m_nFadeCnt++;
		if (m_nFadeCnt >= m_nMaxFadeCnt)
		{
			m_nFadeCnt = m_nMaxFadeCnt;
		}
		fRatio = (float)(m_nFadeCnt) / (float)(m_nMaxFadeCnt);
		SetColor(D3DXCOLOR(0.0f, 0.0f, 0.0f, fRatio), true, fRatio);
		break;
	case FADEMODE_OUT:
		m_nFadeCnt--;
		if (m_nFadeCnt <= 0)
		{
			m_nFadeCnt = 0;
		}

		fRatio = (float)(m_nFadeCnt) / (float)(m_nMaxFadeCnt);
		SetColor(D3DXCOLOR(0.0f, 0.0f, 0.0f, fRatio), true, fRatio);
		break;
	default:
		break;
	}

	if (bModeChenge == false)
	{
		CObject2D::Update();//オブジェクト2D更新処理
	}
}
//========================================================================================================

//======================================================
//描画処理
//======================================================
void CFade::Draw()
{
	D3DXCOLOR col = GetColor();
	if (col.a > 0.0f)
	{
		CObject2D::Draw();//オブジェクト2D描画処理
	}
}
//========================================================================================================

//======================================================
//死亡フラグを設定
//======================================================
void CFade::SetDeath()
{
	CObject::SetDeath();
}
//========================================================================================================

//======================================================
//フェードを設定
//======================================================
void CFade::SetFade(FADEMODE FadeMode)
{
	m_FadeMode = FadeMode;//フェードモードの設定
	switch (FadeMode)
	{
	case FADEMODE_IN:
		m_nFadeCnt = 0;
		break;
	case FADEMODE_OUT:
		m_nFadeCnt = m_nMaxFadeCnt;
		break;
	default:
		break;
	}
}
//========================================================================================================

//======================================================
//生成処理
//======================================================
CFade* CFade::Create()
{
	CFade* pFade = DBG_NEW CFade;                             //フェードを生成
	bool bSuccess = pFade->CObject::GetCreateSuccess();       //生成が成功したかどうかを取得する
	if (bSuccess == true)
	{//生成が成功したら
		if (pFade != nullptr)
		{
			pFade->Init();                                                                                                        //初期化処理
			pFade->SetUseDeath(false);                                                   //死亡フラグを発動するかどうかを設定する
			pFade->SetInfo(1, 1, SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, D3DXCOLOR(0.0f,0.0f, 0.0f,1.0f),POLYGONTYPE00_NORMAL,false);//ポリゴン情報を設定
			pFade->SetPos(SENTER_VECTOR3);                                                                                        //中心に位置を設定
			pFade->m_nMaxFadeCnt = 45;                                                                                           //フェードカウント最大値
			pFade->CObject::SetType(CObject::TYPE_FADE);                                                                          //オブジェクトの種類を決める
		}
	}
	else
	{//オブジェクトに空きがなかったので破棄する
		delete pFade;
		pFade = nullptr;
	}

	return pFade;
}
//========================================================================================================

//=========================================<<<<<<<<<<<シーンフェードクラス>>>>>>>>>>>======================================================================

//======================================================
//コンストラクタ
//======================================================
CSceneFade::CSceneFade() : m_NextMode(CScene::MODE_TITLE)
{

}
//========================================================================================================

//======================================================
//デストラクタ
//======================================================
CSceneFade::~CSceneFade()
{

}
//========================================================================================================

//======================================================
//初期化処理
//======================================================
HRESULT CSceneFade::Init()
{
	CFade::Init();
	return S_OK;
}
//========================================================================================================

//======================================================
//終了処理
//======================================================
void CSceneFade::Uninit()
{
	CFade::Uninit();
}
//========================================================================================================

//======================================================
//更新処理
//======================================================
void CSceneFade::Update()
{
	int& nFadeCnt = GetFadeCnt();
	int& nMaxFadeCnt = GetMaxFadeCnt();

	CFade::Update();
	if (nFadeCnt >= nMaxFadeCnt)
	{
		SetFadeMode(FADEMODE_OUT);
		CManager::SetMode(m_NextMode);
	}
	if (nFadeCnt <= 0)
	{
		SetFadeMode(FADEMODE_NONE);
	}


}
//========================================================================================================

//======================================================
//描画処理
//======================================================
void CSceneFade::Draw()
{
	CFade::Draw();
}
//========================================================================================================

//======================================================
//死亡フラグを設定する
//======================================================
void CSceneFade::SetDeath()
{
	CFade::SetDeath();
}
//========================================================================================================

//======================================================
//生成処理
//======================================================
CSceneFade* CSceneFade::Create()
{
	CSceneFade* pSceneFade = DBG_NEW CSceneFade;                             //フェードを生成
	bool bSuccess = pSceneFade->CObject::GetCreateSuccess();       //生成が成功したかどうかを取得する
	if (bSuccess == true)
	{//生成が成功したら
		if (pSceneFade != nullptr)
		{
			pSceneFade->Init();                                                                                                        //初期化処理
			pSceneFade->SetUseDeath(false);                                                   //死亡フラグを発動するかどうかを設定する
			pSceneFade->SetInfo(1, 1, SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f), POLYGONTYPE00_NORMAL, false);//ポリゴン情報を設定
			pSceneFade->SetPos(SENTER_VECTOR3);                                                                                        //中心に位置を設定
			pSceneFade->SetMaxFadeCnt(45);                                                                                           //フェードカウント最大値
			pSceneFade->CObject::SetType(CObject::TYPE_FADE);                                                                          //オブジェクトの種類を決める
		}
	}
	else
	{//オブジェクトに空きがなかったので破棄する
		delete pSceneFade;
		pSceneFade = nullptr;
	}

	return pSceneFade;
}
//========================================================================================================

//======================================================
//フェードを設定する
//======================================================
void CSceneFade::SetSceneFade(FADEMODE FadeMode, CScene::MODE mode)
{
	//m_FadeMode = FadeMode;//フェードモードの設定
	SetFadeMode(FadeMode);
	m_NextMode = mode;    //次のモード
	switch (FadeMode)
	{
	case FADEMODE_IN:
		SetFadeCnt(0);
		break;
	case FADEMODE_OUT:
		SetFadeCnt(GetMaxFadeCnt());
		break;
	default:
		break;
	}
}
//========================================================================================================

//=========================================<<<<<<<<<<<演出フェードクラス>>>>>>>>>>>======================================================================

//======================================================
//コンストラクタ
//======================================================
CDirectionFade::CDirectionFade() : CFade(4)
{

}
//========================================================================================================

//======================================================
//デストラクタ
//======================================================
CDirectionFade::~CDirectionFade()
{

}
//========================================================================================================

//======================================================
//初期化処理
//======================================================
HRESULT CDirectionFade::Init()
{
	CFade::Init();
	return S_OK;
}
//========================================================================================================

//======================================================
//終了処理
//======================================================
void CDirectionFade::Uninit()
{
	CFade::Uninit();
}
//========================================================================================================

//======================================================
//更新処理
//======================================================
void CDirectionFade::Update()
{
	CFade::Update();
}
//========================================================================================================

//======================================================
//描画処理
//======================================================
void CDirectionFade::Draw()
{
	CFade::Draw();
}
//========================================================================================================

//======================================================
//死亡フラグ設定処理
//======================================================
void CDirectionFade::SetDeath()
{
	CFade::SetDeath();
}
//========================================================================================================

//======================================================
//生成処理
//======================================================
CDirectionFade* CDirectionFade::Create()
{
	CDirectionFade* pDirectionFade = DBG_NEW CDirectionFade;                             //フェードを生成
	bool bSuccess = pDirectionFade->CObject::GetCreateSuccess();       //生成が成功したかどうかを取得する
	if (bSuccess == true)
	{//生成が成功したら
		if (pDirectionFade != nullptr)
		{
			pDirectionFade->Init();                                                                                                        //初期化処理
			pDirectionFade->SetUseDeath(false);                                                   //死亡フラグを発動するかどうかを設定する
			pDirectionFade->SetInfo(1, 1, SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f), POLYGONTYPE00_NORMAL, false);//ポリゴン情報を設定
			pDirectionFade->SetPos(SENTER_VECTOR3);                                                                                        //中心に位置を設定
			pDirectionFade->SetMaxFadeCnt(45);                                                                                           //フェードカウント最大値
			pDirectionFade->CObject::SetType(CObject::TYPE_FADE);                                                                          //オブジェクトの種類を決める
		}
	}
	else
	{//オブジェクトに空きがなかったので破棄する
		delete pDirectionFade;
		pDirectionFade = nullptr;
	}

	return pDirectionFade;
}
//========================================================================================================