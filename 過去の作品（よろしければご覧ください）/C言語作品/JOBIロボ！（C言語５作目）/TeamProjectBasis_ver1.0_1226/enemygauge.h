//=======================================================================================================================================================================================================================
//
// 敵の体力ゲージの処理に関するヘッダーファイル
// Author : Atsumu Kuboichi
//
//=======================================================================================================================================================================================================================
#ifndef _ENEMYGAUGE_H_
#define _ENEMYGAUGE_H_

#include "main.h"
#include "enemy.h"
//=======================================================================================================================================================================================================================
// マクロ定義
//=======================================================================================================================================================================================================================
#define ENEMYHP_WIDTH	(80.0f)	//横幅
#define ENEMYHP_HEIGHT	(4.0f)	//高さ

#define NUM_ENEMYWEAKDISP (3)        //種類数
#define MAX_ENEMYWEAKDISP (MAX_ENEMY)//最大数       
#define ENEMYWEAKDISP_WIDTH (20.0f)  //横幅
#define ENEMYWEAKDISP_HEIGHT (20.0f) //高さ


//=======================================================================================================================================================================================================================
// 列挙型
//=======================================================================================================================================================================================================================
typedef enum
{
	ENEMYWEAKDISP00_SWORD = 0, //剣に弱い
	ENEMYWEAKDISP01_BOOMERANG, //ブーメランに弱い
	ENEMYWEAKDISP02_SPEAKER,   //スピーカーに弱い
	ENEMYWEAKDISP_MAX
}ENEMYWEAKDISP;

//=======================================================================================================================================================================================================================
// 構造体
//=======================================================================================================================================================================================================================

typedef struct
{
	D3DXMATRIX mtxWorld;	//ワールドマトリックス
	D3DXVECTOR3 pos;		//位置
	D3DXCOLOR col;			//色
	bool bUse;				//使用状態
}EnemyHP;

typedef struct
{
	D3DXMATRIX mtxWorld;//ワールドマトリックス
	D3DXVECTOR3 pos;    //位置
	bool bUse;          //使用状態
	int nType;          //種類
}EnemyWeakDisp;

//=======================================================================================================================================================================================================================
// プロトタイプ宣言
//=======================================================================================================================================================================================================================
void InitEnemyGauge(void);							//初期化処理
void InitEnemyWeakDisp(void);                       //初期化処理
void UninitEnemyGauge(void);						//終了処理
void UninitEnemyWeakDisp(void);                     //終了処理
void UpdateEnemyGauge(void);						//更新処理
void UpdateEnemyWeakDisp(void);                     //更新処理
void DrawEnemyGauge(void);							//描画処理
void DrawEnemyWeakDisp(void);                       //描画処理
void SetEnemyGauge(int nNumEnemy, D3DXVECTOR3 pos);	//設定処理
void SetEnemyWeakDisp(int nType, int nNumEnemy, D3DXVECTOR3 pos);//敵弱点表示の設定処理
EnemyHP* GetEnemyGauge(void);						//構造体の情報の取得
EnemyWeakDisp* GetEnemyWeakDisp(void);              

#endif
